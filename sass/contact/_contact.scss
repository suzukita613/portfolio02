$color-main: #3F51B5;

.contact {
    background: #EFEFEF 0% 0% no-repeat padding-box;
}


.contact__form {
  font: normal normal bold 16px/27px YuGothic;
  width: 800px;
  margin: 80px auto;
  background: #FFF 0% 0% no-repeat padding-box;
  
  
  > div {
    display: inline-flex;
    margin: 0 60px 60px 60px;
  
    &.form {
      justify-content: center;
      width: 100%;
      // margin-left: 0;
      margin: 0 0 60px 0;
    }

    //最初のdiv要素のみmargin設定の変更
    &:first-child {
      margin: 60px 60px;

      @include mq('sp') {
        margin: 20px 0;
        padding: 0 10px;
      }
    }
    
      label {
        // margin: 60px 60px;
        width: 130px;
        margin-right: 20px;
        font-weight: 700;
      
      @include mq('sp') {
        width: 100%;
        margin-right: 0;
      }
      
    }
    
    @include mq('sp') {
      flex-wrap: wrap;
      // flex-direction: column;
      // display: block;
      width: 100%;
      margin: 0 0 20px;
      padding: 0 10px;
    }
  }
  
  input, select {
    width: 520px;
    height: 38px;
    
    @include mq('sp') {
      width: 100%;
    }
  }

  textarea {
    resize: none;
    width: 520px;
    height: 240px;
    
    @include mq('sp') {
      width: 100%;
      height: 150px;
    }
  }

  .form-button {
    color: #FFF;
    background: #3F51B5 url(../../img/button-arrow.svg) no-repeat center right 12px / 17px 16px;
    cursor: pointer;
    width: 304px;
    height: 56px;
    border-radius: 8px;
    font-weight: 700;
    // justify-content: center;

    @include mq('sp') {
      width: 100%;
    }
    
  }

  &:hover {
    opacity: 0.8;
    transition: all 0.3s ease 0s;
  }
  
  @include mq('sp') {
    width: 100%;
    margin: 26px auto 0;
  }
  
}

// .form__first {
//   //important以外で設定できる方法を調べること  
//   // margin: 60px 60px !important;
//   margin: 60px 60px;
//   // background: #E81919 0% 0% no-repeat padding-box;
//   @include mq('sp') {
//     margin: 0 auto;
//   }
// }

//CSS初期化
.text-test {
  -moz-appearance: none;
  -webkit-appearance: none;
  appearance: none;
  background-color: transparent;
  background-image: none;
  border: 1px solid rgba(0, 0, 0, 0.16);
  border-radius: 0;
  color: inherit;
  font-family: inherit;
  font-size: 1em;
  padding: 0.4em 0.8em;
  width: 100%;
}

.text-test:focus {
  border: 1px solid rgba(0, 0, 0, 0.32);
  box-shadow: none;
  outline: none;
}

.textarea-text {
  -moz-appearance: none;
  -webkit-appearance: none;
  appearance: none;
  background-color: transparent;
  background-image: none;
  border: 1px solid rgba(0, 0, 0, 0.16);
  border-radius: 0;
  color: inherit;
  font-family: inherit;
  font-size: 1em;
  height: 100px;
  padding: 0.4em 0.8em;
  width: 100%;
}

.textarea-text:focus {
  border: 1px solid rgba(0, 0, 0, 0.32);
  box-shadow: none;
  outline: none;
}

//必須ラベルの色付け
// .label__must {
//   margin-top: 5px;
//   background: #E81919 0% 0% no-repeat padding-box;
//   border-radius: 4px;
//   width: 44px;
//   color: #FFF;
// }

.label__must {
  margin-top: 5px;
  position: relative;

  @include mq('sp') {
    display: inline-block;
  }

  &::after {
    position: absolute;
		text-align: center;
    content: "必須";
    // white-space: pre; //改行設定
    // content: "\A必須"; //\Aの場所で改行
    background: #E81919 0% 0% no-repeat padding-box;
    border-radius: 4px;
    width: 44px;
    color: #FFF;
    display: block;
    left: 0;
    // position: absolute;
    // top: 50%;
    // transform: translateY(-50%);
    
    @include mq('sp') {
      // content: "必須";
      // margin-left: 10px;
      top: 50%;
      left: auto;
      right: 0;
      transform: translateY(-55%);
    }
  }
}

//selectboxの矢印アイコンを非表示
select {
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
}

.form-select {
  background: #FFF url(../../img/select-arrow.svg) no-repeat center right 12px / 17px 16px;
}


div.radio {
  background: #FFF 0% 0% no-repeat padding-box;
  width: none;
  margin-top: 0;
  // font: 8px;
  label {
    @include mq('sp') {
      width: 100px;
    }
  }
}

/* デフォルトのラジオボタンを非表示 */
.form-radio {
    display: none;
  
    /* オリジナルボタンを設置するため、paddingでテキストの左側にスペースを確保 */
    + span {
      cursor: pointer;
      display: inline-block;
      padding: 0 0 0 30px;
      position: relative;
      // background: #FFF 0% 0% no-repeat padding-box;
      // width: none;
      // margin-top: 0;
      /* 擬似要素beforeとafterを共通でセット */
      &::before,
      &::after {
        content: "";
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
      }
  
      /* beforeをラジオボタンの枠として利用するため、デザインを適用する */
      &::before {
        background: #fff;
        border: 1px solid #707070;
        display: block;
        left: 0;
        width: 20px;
        height: 20px;
        border-radius: 50%;
      }
  
      /* afterは枠の中のチェックマークとして利用するため、デザインを適用する
      デフォルトのチェックマークはopacity:0で透明にしておく*/
      &::after {
        border: 1px solid transparent;
        left: 0;
        // width: 25px;
        // height: 25px;
        width: 10px;
        height: 10px;
        border-radius: 50%;
        // background: transparent url(../../img/checkbox.svg) no-repeat center center / contain;
        background: #3F51B5 0% 0% no-repeat padding-box;
        transition: opacity 0.3s ease 0s;
        opacity: 0;
        margin-left: 5px;
        // opacity: 1;
      }
    }
  
  /* 非表示にしたデフォルトのラジオボタンにチェックが入ると、オリジナルボタンのチェックも透明を解除して表示する */
    &:checked {
      + span {
        &::after {
          opacity: 1;
        }
      }
    }
}


#privacy-policy {
  // display: block;
  // margin: 0 auto;
  justify-content: center;
  // margin-left: 60px;
  margin: none;
  width: 100%;

  > div {
    margin: auto;
  }

   label {
    width: 400px;
    margin-right: none;
  }
}

  /* デフォルトのチェックボタンを非表示 */
.form-check {
    display: none;
  
    /* オリジナルボタンを設置するため、paddingでテキストの左側にスペースを確保 */
    + span {
      cursor: pointer;
      display: inline-block;
      padding: 0 0 0 50px;
      position: relative;
      // width: 159px;

  
      /* 擬似要素beforeとafterを共通でセット */
      &::before,
      &::after {
        content: "";
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
      }
  
      /* beforeをチェックボタンの枠として利用するため、デザインを適用する */
      &::before {
        background: #fff;
        border: 1px solid #707070;
        display: block;
        left: 0;
        width: 25px;
        height: 25px;
      }
  
      /* afterは枠の中のチェックマークとして利用するため、デザインを適用する
      デフォルトのチェックマークはopacity:0で透明にしておく*/
      &::after {
        border: 1px solid transparent;
        left: 0;
        width: 25px;
        height: 25px;
        background: transparent url(../../img/checkbox.svg) no-repeat center center / contain;
        transition: opacity 0.3s ease 0s;
        opacity: 0;
      }
    }
  
  /* 非表示にしたデフォルトのチェックボタンにチェックが入ると、オリジナルボタンのチェックも透明を解除して表示する */
    &:checked {
      + span {
        &::after {
          opacity: 1;
        }
      }
    }
}


// .form-button {
//     color: #FFF;
//     background: #3F51B5 url(../../img/button-arrow.svg) no-repeat center right 12px / 17px 16px;
//     cursor: pointer;
//     width: 304px;
//     height: 56px;
//     border-radius: 8px;

// }



.bold__underline {
  text-decoration: underline solid #333;
  font-weight: 700;
}


//モーダル
.contact__form > .modal {
  width: 100%;
  // width: 900px;
  height: 100vh;
  // height: 652px;
  position: fixed;
  //初期非表示
  display: none;
  top: 0;
  left: 0; //なぜか？
  margin: 0;
  color: #707070;
  opacity: 1;
  z-index: 20;

  

  
}

.modal.is-show {
  display: block;
}

.modal__bg {
  background: rgba(0,0,0,0.8);
  width: 100%;
  height: 100vh;
  position: absolute;
  z-index: 10;

  @include mq('sp') {
    padding: 0;
  }
}

.modal__content {
  position: absolute;
  background: #fff;
  left: 50%;
  // padding: 40px;
  top: 50%;
  transform: translate(-50%,-50%);
  // width: 60%;
  opacity: 1;
  z-index: 15;
  width: 900px;
  height: 652px;

  &::before {
    position: absolute;
    content: '';
    width: 40px;
    height: 40px;
    right: 0;
    color: red;
    background: transparent url(/img/btn-batsu.png) no-repeat center center / contain;
    transform: translate(50%, -50%);
    cursor: pointer;

    @include mq('sp') {
      display: none;
    }
  }

  @include mq('sp') {
    width: 100%;
  }
}

.modal-title {
	font-size: 24px;
	font-weight: 700;
	padding: 0 0 28px;
	margin-top: 44px;
	position: relative;
	text-align: center;
	line-height: 1;

	&::after {
		content: "";
		background: #3F51B5;
		width: 60px;
		height: 4px;
		position: absolute;
		bottom: 0;
		left: 50%;
		transform: translateX(-50%);

		@include mq('sp') {
			width: 48px;
		}
	}

	@include mq('tab') {
		// font-size: 50px;
		padding-bottom: 28px;
	}

	@include mq('sp') {
		font-size: 16px;
		padding-bottom: 16px;
	}
}

.modal__content__item {
  margin: 40px 60px 20px 60px;  
  // margin-bottom: 20px;
}

.modal__content__subtitle {
  // position: relative;
  font-size: 20px;
  font-weight: 700;
  margin-bottom: 16px;
  padding-left: 15px;
  // position: absolute;
  border-left: solid #3F51B5 5px;
  border-width: 20%;
  // left: 0;
  
}

.modal__content__p {
  padding-left: 19.5px;
}

.btn__modal {
  //   width: 390px;
      display: inline-block;
      position: absolute;
      bottom: 0;
      left: 50%;
      transform: translate(-50%, -50%);
      width: 176px;  
      height: 48px;
      font-size: 16px;
      // padding: 16px 64px;
      background: #3F51B5;
      box-shadow: 0px 3px 6px #000029;
      border-radius: 8px;
      opacity: $opacity;
      letter-spacing: 0px;
      color: #FFFFFF;   
      font-family: $font;
      font-weight: bold;
      border: none;
      cursor: pointer;
      // vertical-align: middle;
      text-align: center;

      

      &:hover {
        opacity: 0.8;
        transition: all 0.3s ease 0s;
      }
  
      @include mq('sp') {
          font-size: 12px;
          text-align: center;
          width: 200px;
          // width: 100%;
          height: 48px;
          left: 50%;
          padding: 2px 20px;
          border-radius: 8px;
        }
  
        a {
          vertical-align: middle;
          color: #FFFFFF;
          padding: 16px 64px;
          //親要素と同じ高さにすることで水平方向の中央寄せにできる inline-block
          line-height: 48px; 

          @include mq('sp') {
            // line-height: ;
            padding: 0;
          }
        }
}

.modal__content__scroll {
  margin-top: 20px;
  overflow: auto;
  //スクロール領域
  max-height: 70%;

  //スクロールバーの非表示 
  &::-webkit-scrollbar {
    display: none;
  }

  @include mq('sp') {
    max-height: 50%;
  }
}



// -----
// モーダル
// -----
.contact__modal {
  //スクロールしてもずれないようにposition固定
  position: fixed;
  //モーダル中央配置
  left: 50%;
	top: 50%;
	transform: translate(-50%, -50%);
  //モーダル画面の表示領域
  width: 70%;
  //モーダル画面の最大表示領域
  max-width: 100%;
	padding: 60px;
  height: 80%;
  //mapからmodalのz-index数値を取得→ 100
	z-index: map-get($layer, 'modal');
	background: #fff;
  //初期非表示
  display: none;

	@include mq('tab') {
		width: 90%;
		height: 80%;
		padding: 38px 36px 20px;
	}

	@include mq('tab') {
		height: 90%;
		padding: 38px 24px 20px;
	}
  //クリックされたらクラス付与し、表示
	&.is-show {
		display: block;
	}
}

//右上の×アイコン
.contact__modal-close-icon {
	text-align: center;
	position: absolute;
	right: -21px;
	top: -21px;
	cursor: pointer;

	img {
		width: 43px;
	}
}

.contact__modal-title {
	font-size: 24px;
	font-weight: 700;
	text-align: center;
	padding-bottom: 24px;
	position: relative;
	color: #707070;
	line-height: 1;

  //タイトルしたのアンダーライン
	&::after {
		content: "";
		width: 100px;
    height: 2px;
		background: $color-main;
		position: absolute;
    bottom: 0;
		left: 50%;
		transform: translateX(-50%);
	}
}

.contact__modal-content {
  //コンテンツのスクロール
  overflow: auto;
	margin-top: 36px;
	height: calc(100% - 124px - 52px);

	> :first-child {
		margin-top: 0;
	}

	@include mq('tab') {
		margin-top: 60px;
		height: calc(100% - 148px - 52px);
	}

	@include mq('sp') {
		margin-top: 38px;
		height: calc(100% - 128px - 52px);
	}
}

.contact__modal-head {
	font-size: 20px;
	padding: 0 0 0 20px;
	color: #707070;
  //beforeで疑似要素のため、position設定
  position: relative;
	font-weight: 700;
	margin-top: 40px;

	@include mq('sp') {
		margin-top: 32px;
	}

	&::before {
		content: "";
		position: absolute;
		height: 18px;
    //widthを短く設定することで左側だけbackgrondをborderのように設定できる
    width: 3px;
    background: $color-main;
    // background: chartreuse;
		top: 50%;
		transform: translateY(-50%);
		left: 0;
	}
}

.contact__modal-text {
	padding: 0 0 0 20px;
	margin-top: 6px;
	color: #707070;
  //なんで下記の計算式になるんだろう？
  line-height: (26 / 16);
}

.contact__modal-close-button {
	text-align: center;
	margin-top: 50px;
}

.contact__modal-background {
	width: 100%;
	height: 100%;
	position: fixed;
	background: #000;
	opacity: 0.3;
	top: 0;
  left: 0;
  //モーダル画面より-1にすることによってモーダル画面が先頭の層になる
	z-index: map-get($layer, 'modal') - 1;
	display: none;

	&.is-show {
		display: block;
	}
}

// ボタン（モーダル内）
.button-modal {
	display: inline-block;
	background: $color-main;
	color: #fff;
	text-align: center;
	font-size: 16px;
	font-weight: 700;
  text-decoration: none;
  //rgbaのカラーは#000形式でも行けるみたい
	box-shadow: 0 3px 6px rgba(#000, 0.16);
	cursor: pointer;
	transition: all 0.3s ease 0s;
	border-radius: 8px;
	width: 176px;
	padding: 14px;
	border: none;
}